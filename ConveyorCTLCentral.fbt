<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLCentral" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.conveyorIEC61499;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_EXIT" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_EXIT" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TokenGranted" >
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="RequestToken" >
      </Event>
      <Event Name="ReleaseToken" >
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE_EXIT" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="IDLE" Comment="Initial State" x="1200.0" y="838.88885" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="1433.3333" y="494.44443" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WANT" x="1194.4445" y="1272.2222" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
        <ECAction Output="RequestToken" />
      </ECState>
      <ECState Name="Received" x="1216.6666" y="1716.6666" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WAIT_NEXT" x="1216.6666" y="2661.111" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DEPARTED_CURRENT" x="1216.6666" y="2200.0" >
      </ECState>
      <ECState Name="RELEASE_TOKEN" x="2733.3333" y="1038.8888" >
        <ECAction Output="ReleaseToken" />
      </ECState>
      <ECState Name="RELEASE_AND_WANT" x="2672.2222" y="1550.0" >
        <ECAction Output="ReleaseToken" />
      </ECState>
      <ECTransition Source="IDLE" Destination="INIT" Condition="INIT" x="1200.0" y="494.44443" />
      <ECTransition Source="INIT" Destination="IDLE" Condition="1" x="1344.4443" y="666.6666" />
      <ECTransition Source="IDLE" Destination="WANT" Condition="!PE" x="1194.4445" y="1033.3333" />
      <ECTransition Source="WANT" Destination="Received" Condition="TokenGranted" x="1205.5555" y="1472.2222" />
      <ECTransition Source="Received" Destination="DEPARTED_CURRENT" Condition="PE" x="1216.6666" y="1938.8888" />
      <ECTransition Source="DEPARTED_CURRENT" Destination="WAIT_NEXT" Condition="!PE" x="1216.6666" y="2416.6665" />
      <ECTransition Source="RELEASE_TOKEN" Destination="IDLE" Condition="1" x="1394.4443" y="1038.8888" />
      <ECTransition Source="RELEASE_AND_WANT" Destination="WANT" Condition="1" x="1511.1111" y="1550.0" />
      <ECTransition Source="WAIT_NEXT" Destination="RELEASE_AND_WANT" Condition="PE_EXIT" x="2172.2222" y="1927.7777" />
      <ECTransition Source="DEPARTED_CURRENT" Destination="RELEASE_TOKEN" Condition="PE_EXIT" x="2094.4443" y="1761.1111" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
