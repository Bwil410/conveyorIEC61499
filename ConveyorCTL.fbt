<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTL" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.conveyorIEC61499;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TokenUpdateIN" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13" />
        <With Var="TokenIN" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="TokenUpdate" >
        <With Var="Token" />
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE13" Type="BOOL" />
      <VarDeclaration Name="TokenIN" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="Token" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="TOKEN" Comment="Initial State" x="3838.8887" y="1594.4443" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
        <ECAction Algorithm="DISCARD" Output="TokenUpdate" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="499.99997" y="722.22217" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="NO_TOKEN" x="3788.8887" y="905.55554" >
        <ECAction Algorithm="SEND" Output="TokenUpdate" />
        <ECAction Algorithm="SEND" />
      </ECState>
      <ECState Name="WANT" x="3811.111" y="1988.8888" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CS" x="3838.8887" y="2566.6665" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CS_FREEZE" x="3866.6665" y="3044.4443" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECTransition Source="TOKEN" Destination="INIT" Condition="INIT" x="516.6666" y="1011.1111" />
      <ECTransition Source="INIT" Destination="TOKEN" Condition="1" x="516.6666" y="449.99997" />
      <ECTransition Source="TOKEN" Destination="CS" Condition="REQ&#38;!PE" x="1872.2222" y="2116.6665" />
      <ECTransition Source="CS" Destination="CS_FREEZE" Condition="REQ&#38;!PE" x="3555.5554" y="2805.5554" />
      <ECTransition Source="NO_TOKEN" Destination="TOKEN" Condition="TokenUpdateIN&#38;TokenIN" x="3433.3333" y="1194.4445" />
      <ECTransition Source="TOKEN" Destination="NO_TOKEN" Condition="REQ&#38;PE" x="4111.111" y="1216.6666" />
      <ECTransition Source="NO_TOKEN" Destination="WANT" Condition="REQ&#38;PE" x="1772.2222" y="1566.6666" />
      <ECTransition Source="WANT" Destination="CS" Condition="TokenUpdateIN&#38;TokenIN" x="3833.3333" y="2200.0" />
      <ECTransition Source="CS_FREEZE" Destination="CS" Condition="REQ&#38;!PE13" x="4083.3333" y="2811.111" />
      <ECTransition Source="CS" Destination="NO_TOKEN" Condition="REQ&#38;PE" x="6427.7773" y="1888.8888" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="SEND" >
    <Other Language="Java" Text="Token.value = true;&#10;" />
  </Algorithm>
  <Algorithm Name="DISCARD" >
    <Other Language="Java" Text="Token.value = false;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
